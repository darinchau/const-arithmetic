//! Implements the HexAdd trait
use super::*;

/// This is an internal implementation of addition without carryover
pub trait _HexAdd1<H: Hex> { type Output: Hex; type Carry: Hex; }
impl _HexAdd1<_0> for _0 { type Output = _0; type Carry = _0; }
impl _HexAdd1<_0> for _1 { type Output = _1; type Carry = _0; }
impl _HexAdd1<_0> for _2 { type Output = _2; type Carry = _0; }
impl _HexAdd1<_0> for _3 { type Output = _3; type Carry = _0; }
impl _HexAdd1<_0> for _4 { type Output = _4; type Carry = _0; }
impl _HexAdd1<_0> for _5 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_0> for _6 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_0> for _7 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_0> for _8 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_0> for _9 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_0> for _A { type Output = _A; type Carry = _0; }
impl _HexAdd1<_0> for _B { type Output = _B; type Carry = _0; }
impl _HexAdd1<_0> for _C { type Output = _C; type Carry = _0; }
impl _HexAdd1<_0> for _D { type Output = _D; type Carry = _0; }
impl _HexAdd1<_0> for _E { type Output = _E; type Carry = _0; }
impl _HexAdd1<_0> for _F { type Output = _F; type Carry = _0; }
impl _HexAdd1<_1> for _0 { type Output = _1; type Carry = _0; }
impl _HexAdd1<_1> for _1 { type Output = _2; type Carry = _0; }
impl _HexAdd1<_1> for _2 { type Output = _3; type Carry = _0; }
impl _HexAdd1<_1> for _3 { type Output = _4; type Carry = _0; }
impl _HexAdd1<_1> for _4 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_1> for _5 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_1> for _6 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_1> for _7 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_1> for _8 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_1> for _9 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_1> for _A { type Output = _B; type Carry = _0; }
impl _HexAdd1<_1> for _B { type Output = _C; type Carry = _0; }
impl _HexAdd1<_1> for _C { type Output = _D; type Carry = _0; }
impl _HexAdd1<_1> for _D { type Output = _E; type Carry = _0; }
impl _HexAdd1<_1> for _E { type Output = _F; type Carry = _0; }
impl _HexAdd1<_1> for _F { type Output = _0; type Carry = _1; }
impl _HexAdd1<_2> for _0 { type Output = _2; type Carry = _0; }
impl _HexAdd1<_2> for _1 { type Output = _3; type Carry = _0; }
impl _HexAdd1<_2> for _2 { type Output = _4; type Carry = _0; }
impl _HexAdd1<_2> for _3 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_2> for _4 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_2> for _5 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_2> for _6 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_2> for _7 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_2> for _8 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_2> for _9 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_2> for _A { type Output = _C; type Carry = _0; }
impl _HexAdd1<_2> for _B { type Output = _D; type Carry = _0; }
impl _HexAdd1<_2> for _C { type Output = _E; type Carry = _0; }
impl _HexAdd1<_2> for _D { type Output = _F; type Carry = _0; }
impl _HexAdd1<_2> for _E { type Output = _0; type Carry = _1; }
impl _HexAdd1<_2> for _F { type Output = _1; type Carry = _1; }
impl _HexAdd1<_3> for _0 { type Output = _3; type Carry = _0; }
impl _HexAdd1<_3> for _1 { type Output = _4; type Carry = _0; }
impl _HexAdd1<_3> for _2 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_3> for _3 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_3> for _4 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_3> for _5 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_3> for _6 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_3> for _7 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_3> for _8 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_3> for _9 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_3> for _A { type Output = _D; type Carry = _0; }
impl _HexAdd1<_3> for _B { type Output = _E; type Carry = _0; }
impl _HexAdd1<_3> for _C { type Output = _F; type Carry = _0; }
impl _HexAdd1<_3> for _D { type Output = _0; type Carry = _1; }
impl _HexAdd1<_3> for _E { type Output = _1; type Carry = _1; }
impl _HexAdd1<_3> for _F { type Output = _2; type Carry = _1; }
impl _HexAdd1<_4> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd1<_4> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_4> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_4> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_4> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_4> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_4> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_4> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_4> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_4> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_4> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd1<_4> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd1<_4> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd1<_4> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd1<_4> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd1<_4> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd1<_5> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd1<_5> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_5> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_5> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_5> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_5> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_5> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_5> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_5> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_5> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_5> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd1<_5> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd1<_5> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd1<_5> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd1<_5> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd1<_5> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd1<_6> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd1<_6> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_6> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_6> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_6> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_6> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_6> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_6> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_6> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_6> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_6> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd1<_6> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd1<_6> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd1<_6> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd1<_6> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd1<_6> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd1<_7> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd1<_7> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_7> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_7> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_7> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_7> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_7> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_7> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_7> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_7> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_7> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd1<_7> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd1<_7> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd1<_7> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd1<_7> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd1<_7> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd1<_8> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd1<_8> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_8> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_8> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_8> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_8> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_8> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_8> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_8> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_8> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_8> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd1<_8> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd1<_8> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd1<_8> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd1<_8> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd1<_8> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd1<_9> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd1<_9> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_9> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_9> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_9> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_9> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_9> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_9> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_9> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_9> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_9> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd1<_9> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd1<_9> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd1<_9> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd1<_9> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd1<_9> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd1<_A> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd1<_A> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_A> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_A> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_A> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_A> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_A> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_A> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_A> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_A> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_A> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd1<_A> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd1<_A> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd1<_A> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd1<_A> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd1<_A> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd1<_B> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd1<_B> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_B> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_B> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_B> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_B> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_B> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_B> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_B> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_B> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd1<_B> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd1<_B> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd1<_B> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd1<_B> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd1<_B> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd1<_B> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd1<_C> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd1<_C> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_C> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_C> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_C> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_C> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_C> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_C> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_C> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd1<_C> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd1<_C> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd1<_C> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd1<_C> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd1<_C> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd1<_C> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd1<_C> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd1<_D> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd1<_D> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_D> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_D> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_D> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_D> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_D> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_D> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd1<_D> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd1<_D> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd1<_D> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd1<_D> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd1<_D> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd1<_D> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd1<_D> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd1<_D> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd1<_E> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd1<_E> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_E> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_E> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_E> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_E> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_E> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd1<_E> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd1<_E> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd1<_E> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd1<_E> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd1<_E> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd1<_E> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd1<_E> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd1<_E> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd1<_E> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd1<_F> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd1<_F> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd1<_F> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd1<_F> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd1<_F> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd1<_F> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd1<_F> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd1<_F> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd1<_F> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd1<_F> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd1<_F> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd1<_F> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd1<_F> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd1<_F> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd1<_F> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd1<_F> for _F { type Output = _E; type Carry = _1; }

/// This is an internal implementation of addition with carryover
pub trait _HexAdd2<H: Hex, C: Hex> { type Output: Hex; type Carry: Hex; }
impl _HexAdd2<_0, _0> for _0 { type Output = _0; type Carry = _0; }
impl _HexAdd2<_0, _0> for _1 { type Output = _1; type Carry = _0; }
impl _HexAdd2<_0, _0> for _2 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_0, _0> for _3 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_0, _0> for _4 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_0, _0> for _5 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _0> for _6 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _0> for _7 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _0> for _8 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _0> for _9 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _0> for _A { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _0> for _B { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _0> for _C { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _0> for _D { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _0> for _E { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _0> for _F { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _1> for _0 { type Output = _1; type Carry = _0; }
impl _HexAdd2<_0, _1> for _1 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_0, _1> for _2 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_0, _1> for _3 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_0, _1> for _4 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _1> for _5 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _1> for _6 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _1> for _7 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _1> for _8 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _1> for _9 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _1> for _A { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _1> for _B { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _1> for _C { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _1> for _D { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _1> for _E { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _1> for _F { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _2> for _0 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_0, _2> for _1 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_0, _2> for _2 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_0, _2> for _3 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _2> for _4 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _2> for _5 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _2> for _6 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _2> for _7 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _2> for _8 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _2> for _9 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _2> for _A { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _2> for _B { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _2> for _C { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _2> for _D { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _2> for _E { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _2> for _F { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _3> for _0 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_0, _3> for _1 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_0, _3> for _2 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _3> for _3 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _3> for _4 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _3> for _5 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _3> for _6 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _3> for _7 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _3> for _8 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _3> for _9 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _3> for _A { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _3> for _B { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _3> for _C { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _3> for _D { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _3> for _E { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _3> for _F { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _4> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_0, _4> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _4> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _4> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _4> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _4> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _4> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _4> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _4> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _4> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _4> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _4> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _4> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _4> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _4> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _4> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _5> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_0, _5> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _5> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _5> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _5> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _5> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _5> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _5> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _5> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _5> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _5> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _5> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _5> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _5> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _5> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _5> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _6> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_0, _6> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _6> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _6> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _6> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _6> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _6> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _6> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _6> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _6> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _6> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _6> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _6> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _6> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _6> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _6> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _7> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_0, _7> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _7> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _7> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _7> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _7> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _7> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _7> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _7> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _7> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _7> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _7> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _7> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _7> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _7> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _7> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _8> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_0, _8> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _8> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _8> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _8> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _8> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _8> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _8> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _8> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _8> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _8> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _8> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _8> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _8> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _8> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _8> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _9> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_0, _9> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _9> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _9> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _9> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _9> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _9> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _9> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _9> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _9> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _9> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _9> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _9> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _9> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _9> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _9> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _A> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_0, _A> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _A> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _A> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _A> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _A> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _A> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _A> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _A> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _A> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _A> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _A> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _A> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _A> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _A> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _A> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _B> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_0, _B> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _B> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _B> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _B> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _B> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _B> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _B> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _B> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _B> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _B> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _B> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _B> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _B> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _B> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _B> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_0, _C> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_0, _C> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _C> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _C> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _C> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _C> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _C> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _C> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _C> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _C> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _C> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _C> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _C> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _C> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _C> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_0, _C> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_0, _D> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_0, _D> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _D> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _D> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _D> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _D> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _D> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _D> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _D> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _D> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _D> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _D> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _D> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _D> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_0, _D> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_0, _D> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_0, _E> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_0, _E> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _E> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _E> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _E> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _E> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _E> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _E> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _E> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _E> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _E> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _E> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _E> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_0, _E> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_0, _E> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_0, _E> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_0, _F> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_0, _F> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_0, _F> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_0, _F> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_0, _F> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_0, _F> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_0, _F> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_0, _F> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_0, _F> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_0, _F> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_0, _F> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_0, _F> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_0, _F> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_0, _F> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_0, _F> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_0, _F> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_1, _0> for _0 { type Output = _1; type Carry = _0; }
impl _HexAdd2<_1, _0> for _1 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_1, _0> for _2 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_1, _0> for _3 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_1, _0> for _4 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_1, _0> for _5 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _0> for _6 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _0> for _7 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _0> for _8 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _0> for _9 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _0> for _A { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _0> for _B { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _0> for _C { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _0> for _D { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _0> for _E { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _0> for _F { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _1> for _0 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_1, _1> for _1 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_1, _1> for _2 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_1, _1> for _3 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_1, _1> for _4 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _1> for _5 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _1> for _6 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _1> for _7 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _1> for _8 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _1> for _9 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _1> for _A { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _1> for _B { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _1> for _C { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _1> for _D { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _1> for _E { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _1> for _F { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _2> for _0 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_1, _2> for _1 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_1, _2> for _2 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_1, _2> for _3 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _2> for _4 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _2> for _5 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _2> for _6 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _2> for _7 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _2> for _8 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _2> for _9 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _2> for _A { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _2> for _B { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _2> for _C { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _2> for _D { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _2> for _E { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _2> for _F { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _3> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_1, _3> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_1, _3> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _3> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _3> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _3> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _3> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _3> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _3> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _3> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _3> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _3> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _3> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _3> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _3> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _3> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _4> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_1, _4> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _4> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _4> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _4> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _4> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _4> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _4> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _4> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _4> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _4> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _4> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _4> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _4> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _4> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _4> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _5> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_1, _5> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _5> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _5> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _5> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _5> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _5> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _5> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _5> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _5> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _5> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _5> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _5> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _5> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _5> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _5> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _6> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_1, _6> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _6> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _6> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _6> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _6> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _6> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _6> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _6> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _6> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _6> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _6> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _6> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _6> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _6> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _6> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _7> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_1, _7> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _7> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _7> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _7> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _7> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _7> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _7> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _7> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _7> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _7> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _7> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _7> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _7> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _7> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _7> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _8> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_1, _8> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _8> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _8> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _8> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _8> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _8> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _8> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _8> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _8> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _8> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _8> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _8> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _8> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _8> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _8> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _9> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_1, _9> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _9> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _9> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _9> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _9> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _9> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _9> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _9> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _9> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _9> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _9> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _9> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _9> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _9> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _9> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _A> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_1, _A> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _A> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _A> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _A> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _A> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _A> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _A> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _A> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _A> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _A> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _A> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _A> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _A> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _A> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _A> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _B> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_1, _B> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _B> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _B> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _B> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _B> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _B> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _B> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _B> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _B> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _B> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _B> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _B> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _B> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _B> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _B> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_1, _C> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_1, _C> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _C> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _C> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _C> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _C> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _C> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _C> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _C> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _C> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _C> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _C> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _C> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _C> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _C> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_1, _C> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_1, _D> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_1, _D> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _D> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _D> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _D> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _D> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _D> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _D> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _D> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _D> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _D> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _D> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _D> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _D> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_1, _D> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_1, _D> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_1, _E> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_1, _E> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _E> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _E> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _E> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _E> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _E> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _E> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _E> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _E> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _E> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _E> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _E> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_1, _E> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_1, _E> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_1, _E> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_1, _F> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_1, _F> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_1, _F> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_1, _F> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_1, _F> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_1, _F> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_1, _F> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_1, _F> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_1, _F> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_1, _F> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_1, _F> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_1, _F> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_1, _F> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_1, _F> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_1, _F> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_1, _F> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_2, _0> for _0 { type Output = _2; type Carry = _0; }
impl _HexAdd2<_2, _0> for _1 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_2, _0> for _2 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_2, _0> for _3 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_2, _0> for _4 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_2, _0> for _5 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _0> for _6 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _0> for _7 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _0> for _8 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _0> for _9 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _0> for _A { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _0> for _B { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _0> for _C { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _0> for _D { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _0> for _E { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _0> for _F { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _1> for _0 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_2, _1> for _1 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_2, _1> for _2 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_2, _1> for _3 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_2, _1> for _4 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _1> for _5 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _1> for _6 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _1> for _7 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _1> for _8 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _1> for _9 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _1> for _A { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _1> for _B { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _1> for _C { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _1> for _D { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _1> for _E { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _1> for _F { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _2> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_2, _2> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_2, _2> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_2, _2> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _2> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _2> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _2> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _2> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _2> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _2> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _2> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _2> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _2> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _2> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _2> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _2> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _3> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_2, _3> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_2, _3> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _3> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _3> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _3> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _3> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _3> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _3> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _3> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _3> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _3> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _3> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _3> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _3> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _3> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _4> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_2, _4> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _4> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _4> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _4> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _4> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _4> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _4> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _4> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _4> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _4> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _4> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _4> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _4> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _4> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _4> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _5> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_2, _5> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _5> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _5> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _5> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _5> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _5> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _5> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _5> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _5> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _5> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _5> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _5> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _5> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _5> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _5> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _6> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_2, _6> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _6> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _6> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _6> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _6> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _6> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _6> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _6> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _6> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _6> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _6> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _6> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _6> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _6> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _6> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _7> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_2, _7> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _7> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _7> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _7> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _7> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _7> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _7> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _7> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _7> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _7> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _7> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _7> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _7> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _7> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _7> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _8> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_2, _8> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _8> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _8> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _8> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _8> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _8> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _8> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _8> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _8> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _8> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _8> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _8> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _8> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _8> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _8> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _9> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_2, _9> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _9> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _9> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _9> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _9> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _9> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _9> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _9> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _9> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _9> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _9> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _9> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _9> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _9> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _9> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _A> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_2, _A> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _A> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _A> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _A> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _A> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _A> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _A> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _A> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _A> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _A> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _A> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _A> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _A> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _A> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _A> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _B> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_2, _B> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _B> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _B> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _B> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _B> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _B> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _B> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _B> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _B> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _B> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _B> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _B> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _B> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _B> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _B> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_2, _C> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_2, _C> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _C> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _C> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _C> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _C> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _C> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _C> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _C> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _C> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _C> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _C> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _C> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _C> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _C> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_2, _C> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_2, _D> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_2, _D> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _D> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _D> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _D> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _D> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _D> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _D> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _D> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _D> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _D> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _D> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _D> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _D> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_2, _D> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_2, _D> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_2, _E> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_2, _E> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _E> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _E> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _E> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _E> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _E> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _E> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _E> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _E> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _E> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _E> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _E> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_2, _E> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_2, _E> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_2, _E> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_2, _F> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_2, _F> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_2, _F> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_2, _F> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_2, _F> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_2, _F> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_2, _F> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_2, _F> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_2, _F> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_2, _F> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_2, _F> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_2, _F> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_2, _F> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_2, _F> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_2, _F> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_2, _F> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_3, _0> for _0 { type Output = _3; type Carry = _0; }
impl _HexAdd2<_3, _0> for _1 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_3, _0> for _2 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_3, _0> for _3 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_3, _0> for _4 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_3, _0> for _5 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _0> for _6 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _0> for _7 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _0> for _8 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _0> for _9 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _0> for _A { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _0> for _B { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _0> for _C { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _0> for _D { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _0> for _E { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _0> for _F { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _1> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_3, _1> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_3, _1> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_3, _1> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_3, _1> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _1> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _1> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _1> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _1> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _1> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _1> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _1> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _1> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _1> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _1> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _1> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _2> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_3, _2> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_3, _2> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_3, _2> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _2> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _2> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _2> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _2> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _2> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _2> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _2> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _2> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _2> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _2> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _2> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _2> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _3> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_3, _3> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_3, _3> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _3> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _3> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _3> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _3> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _3> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _3> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _3> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _3> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _3> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _3> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _3> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _3> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _3> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _4> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_3, _4> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _4> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _4> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _4> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _4> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _4> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _4> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _4> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _4> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _4> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _4> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _4> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _4> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _4> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _4> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _5> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_3, _5> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _5> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _5> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _5> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _5> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _5> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _5> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _5> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _5> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _5> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _5> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _5> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _5> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _5> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _5> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _6> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_3, _6> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _6> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _6> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _6> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _6> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _6> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _6> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _6> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _6> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _6> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _6> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _6> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _6> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _6> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _6> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _7> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_3, _7> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _7> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _7> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _7> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _7> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _7> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _7> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _7> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _7> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _7> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _7> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _7> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _7> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _7> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _7> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _8> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_3, _8> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _8> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _8> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _8> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _8> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _8> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _8> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _8> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _8> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _8> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _8> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _8> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _8> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _8> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _8> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _9> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_3, _9> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _9> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _9> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _9> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _9> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _9> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _9> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _9> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _9> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _9> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _9> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _9> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _9> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _9> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _9> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _A> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_3, _A> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _A> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _A> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _A> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _A> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _A> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _A> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _A> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _A> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _A> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _A> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _A> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _A> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _A> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _A> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _B> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_3, _B> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _B> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _B> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _B> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _B> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _B> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _B> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _B> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _B> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _B> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _B> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _B> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _B> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _B> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _B> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_3, _C> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_3, _C> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _C> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _C> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _C> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _C> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _C> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _C> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _C> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _C> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _C> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _C> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _C> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _C> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _C> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_3, _C> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_3, _D> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_3, _D> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _D> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _D> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _D> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _D> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _D> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _D> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _D> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _D> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _D> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _D> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _D> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _D> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_3, _D> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_3, _D> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_3, _E> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_3, _E> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _E> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _E> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _E> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _E> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _E> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _E> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _E> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _E> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _E> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _E> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _E> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_3, _E> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_3, _E> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_3, _E> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_3, _F> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_3, _F> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_3, _F> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_3, _F> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_3, _F> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_3, _F> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_3, _F> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_3, _F> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_3, _F> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_3, _F> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_3, _F> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_3, _F> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_3, _F> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_3, _F> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_3, _F> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_3, _F> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_4, _0> for _0 { type Output = _4; type Carry = _0; }
impl _HexAdd2<_4, _0> for _1 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_4, _0> for _2 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_4, _0> for _3 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_4, _0> for _4 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_4, _0> for _5 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _0> for _6 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _0> for _7 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _0> for _8 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _0> for _9 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _0> for _A { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _0> for _B { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _0> for _C { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _0> for _D { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _0> for _E { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _0> for _F { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _1> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_4, _1> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_4, _1> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_4, _1> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_4, _1> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _1> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _1> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _1> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _1> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _1> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _1> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _1> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _1> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _1> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _1> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _1> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _2> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_4, _2> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_4, _2> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_4, _2> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _2> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _2> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _2> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _2> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _2> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _2> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _2> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _2> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _2> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _2> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _2> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _2> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _3> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_4, _3> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_4, _3> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _3> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _3> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _3> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _3> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _3> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _3> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _3> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _3> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _3> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _3> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _3> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _3> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _3> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _4> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_4, _4> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _4> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _4> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _4> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _4> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _4> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _4> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _4> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _4> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _4> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _4> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _4> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _4> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _4> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _4> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _5> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_4, _5> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _5> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _5> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _5> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _5> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _5> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _5> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _5> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _5> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _5> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _5> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _5> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _5> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _5> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _5> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _6> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_4, _6> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _6> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _6> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _6> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _6> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _6> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _6> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _6> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _6> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _6> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _6> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _6> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _6> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _6> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _6> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _7> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_4, _7> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _7> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _7> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _7> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _7> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _7> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _7> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _7> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _7> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _7> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _7> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _7> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _7> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _7> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _7> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _8> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_4, _8> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _8> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _8> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _8> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _8> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _8> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _8> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _8> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _8> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _8> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _8> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _8> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _8> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _8> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _8> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _9> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_4, _9> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _9> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _9> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _9> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _9> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _9> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _9> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _9> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _9> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _9> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _9> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _9> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _9> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _9> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _9> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _A> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_4, _A> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _A> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _A> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _A> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _A> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _A> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _A> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _A> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _A> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _A> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _A> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _A> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _A> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _A> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _A> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _B> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_4, _B> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _B> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _B> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _B> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _B> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _B> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _B> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _B> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _B> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _B> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _B> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _B> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _B> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _B> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _B> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_4, _C> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_4, _C> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _C> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _C> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _C> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _C> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _C> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _C> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _C> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _C> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _C> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _C> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _C> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _C> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _C> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_4, _C> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_4, _D> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_4, _D> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _D> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _D> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _D> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _D> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _D> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _D> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _D> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _D> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _D> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _D> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _D> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _D> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_4, _D> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_4, _D> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_4, _E> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_4, _E> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _E> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _E> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _E> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _E> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _E> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _E> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _E> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _E> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _E> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _E> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _E> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_4, _E> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_4, _E> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_4, _E> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_4, _F> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_4, _F> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_4, _F> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_4, _F> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_4, _F> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_4, _F> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_4, _F> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_4, _F> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_4, _F> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_4, _F> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_4, _F> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_4, _F> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_4, _F> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_4, _F> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_4, _F> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_4, _F> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_5, _0> for _0 { type Output = _5; type Carry = _0; }
impl _HexAdd2<_5, _0> for _1 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_5, _0> for _2 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_5, _0> for _3 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_5, _0> for _4 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_5, _0> for _5 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _0> for _6 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _0> for _7 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _0> for _8 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _0> for _9 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _0> for _A { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _0> for _B { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _0> for _C { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _0> for _D { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _0> for _E { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _0> for _F { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _1> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_5, _1> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_5, _1> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_5, _1> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_5, _1> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _1> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _1> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _1> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _1> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _1> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _1> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _1> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _1> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _1> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _1> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _1> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _2> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_5, _2> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_5, _2> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_5, _2> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _2> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _2> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _2> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _2> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _2> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _2> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _2> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _2> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _2> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _2> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _2> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _2> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _3> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_5, _3> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_5, _3> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _3> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _3> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _3> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _3> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _3> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _3> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _3> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _3> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _3> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _3> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _3> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _3> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _3> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _4> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_5, _4> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _4> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _4> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _4> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _4> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _4> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _4> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _4> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _4> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _4> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _4> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _4> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _4> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _4> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _4> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _5> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_5, _5> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _5> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _5> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _5> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _5> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _5> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _5> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _5> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _5> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _5> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _5> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _5> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _5> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _5> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _5> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _6> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_5, _6> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _6> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _6> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _6> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _6> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _6> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _6> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _6> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _6> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _6> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _6> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _6> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _6> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _6> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _6> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _7> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_5, _7> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _7> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _7> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _7> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _7> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _7> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _7> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _7> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _7> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _7> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _7> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _7> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _7> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _7> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _7> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _8> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_5, _8> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _8> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _8> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _8> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _8> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _8> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _8> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _8> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _8> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _8> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _8> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _8> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _8> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _8> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _8> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _9> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_5, _9> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _9> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _9> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _9> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _9> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _9> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _9> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _9> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _9> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _9> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _9> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _9> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _9> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _9> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _9> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _A> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_5, _A> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _A> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _A> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _A> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _A> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _A> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _A> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _A> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _A> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _A> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _A> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _A> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _A> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _A> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _A> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _B> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_5, _B> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _B> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _B> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _B> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _B> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _B> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _B> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _B> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _B> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _B> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _B> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _B> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _B> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _B> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _B> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_5, _C> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_5, _C> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _C> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _C> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _C> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _C> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _C> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _C> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _C> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _C> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _C> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _C> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _C> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _C> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _C> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_5, _C> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_5, _D> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_5, _D> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _D> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _D> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _D> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _D> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _D> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _D> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _D> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _D> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _D> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _D> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _D> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _D> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_5, _D> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_5, _D> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_5, _E> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_5, _E> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _E> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _E> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _E> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _E> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _E> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _E> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _E> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _E> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _E> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _E> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _E> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_5, _E> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_5, _E> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_5, _E> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_5, _F> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_5, _F> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_5, _F> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_5, _F> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_5, _F> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_5, _F> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_5, _F> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_5, _F> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_5, _F> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_5, _F> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_5, _F> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_5, _F> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_5, _F> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_5, _F> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_5, _F> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_5, _F> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_6, _0> for _0 { type Output = _6; type Carry = _0; }
impl _HexAdd2<_6, _0> for _1 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_6, _0> for _2 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_6, _0> for _3 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_6, _0> for _4 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_6, _0> for _5 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _0> for _6 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _0> for _7 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _0> for _8 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _0> for _9 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _0> for _A { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _0> for _B { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _0> for _C { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _0> for _D { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _0> for _E { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _0> for _F { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _1> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_6, _1> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_6, _1> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_6, _1> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_6, _1> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _1> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _1> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _1> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _1> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _1> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _1> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _1> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _1> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _1> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _1> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _1> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _2> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_6, _2> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_6, _2> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_6, _2> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _2> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _2> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _2> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _2> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _2> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _2> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _2> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _2> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _2> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _2> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _2> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _2> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _3> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_6, _3> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_6, _3> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _3> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _3> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _3> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _3> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _3> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _3> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _3> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _3> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _3> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _3> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _3> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _3> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _3> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _4> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_6, _4> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _4> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _4> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _4> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _4> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _4> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _4> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _4> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _4> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _4> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _4> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _4> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _4> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _4> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _4> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _5> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_6, _5> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _5> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _5> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _5> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _5> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _5> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _5> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _5> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _5> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _5> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _5> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _5> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _5> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _5> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _5> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _6> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_6, _6> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _6> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _6> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _6> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _6> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _6> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _6> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _6> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _6> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _6> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _6> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _6> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _6> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _6> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _6> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _7> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_6, _7> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _7> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _7> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _7> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _7> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _7> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _7> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _7> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _7> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _7> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _7> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _7> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _7> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _7> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _7> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _8> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_6, _8> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _8> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _8> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _8> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _8> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _8> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _8> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _8> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _8> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _8> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _8> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _8> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _8> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _8> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _8> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _9> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_6, _9> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _9> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _9> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _9> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _9> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _9> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _9> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _9> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _9> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _9> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _9> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _9> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _9> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _9> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _9> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _A> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_6, _A> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _A> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _A> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _A> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _A> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _A> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _A> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _A> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _A> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _A> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _A> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _A> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _A> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _A> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _A> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _B> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_6, _B> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _B> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _B> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _B> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _B> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _B> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _B> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _B> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _B> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _B> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _B> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _B> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _B> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _B> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _B> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_6, _C> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_6, _C> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _C> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _C> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _C> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _C> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _C> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _C> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _C> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _C> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _C> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _C> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _C> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _C> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _C> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_6, _C> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_6, _D> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_6, _D> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _D> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _D> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _D> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _D> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _D> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _D> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _D> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _D> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _D> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _D> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _D> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _D> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_6, _D> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_6, _D> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_6, _E> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_6, _E> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _E> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _E> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _E> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _E> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _E> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _E> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _E> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _E> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _E> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _E> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _E> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_6, _E> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_6, _E> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_6, _E> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_6, _F> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_6, _F> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_6, _F> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_6, _F> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_6, _F> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_6, _F> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_6, _F> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_6, _F> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_6, _F> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_6, _F> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_6, _F> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_6, _F> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_6, _F> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_6, _F> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_6, _F> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_6, _F> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_7, _0> for _0 { type Output = _7; type Carry = _0; }
impl _HexAdd2<_7, _0> for _1 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_7, _0> for _2 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_7, _0> for _3 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_7, _0> for _4 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_7, _0> for _5 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _0> for _6 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _0> for _7 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _0> for _8 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _0> for _9 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _0> for _A { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _0> for _B { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _0> for _C { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _0> for _D { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _0> for _E { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _0> for _F { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _1> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_7, _1> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_7, _1> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_7, _1> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_7, _1> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _1> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _1> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _1> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _1> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _1> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _1> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _1> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _1> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _1> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _1> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _1> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _2> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_7, _2> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_7, _2> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_7, _2> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _2> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _2> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _2> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _2> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _2> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _2> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _2> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _2> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _2> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _2> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _2> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _2> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _3> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_7, _3> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_7, _3> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _3> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _3> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _3> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _3> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _3> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _3> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _3> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _3> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _3> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _3> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _3> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _3> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _3> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _4> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_7, _4> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _4> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _4> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _4> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _4> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _4> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _4> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _4> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _4> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _4> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _4> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _4> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _4> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _4> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _4> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _5> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_7, _5> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _5> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _5> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _5> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _5> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _5> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _5> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _5> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _5> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _5> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _5> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _5> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _5> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _5> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _5> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _6> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_7, _6> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _6> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _6> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _6> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _6> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _6> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _6> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _6> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _6> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _6> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _6> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _6> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _6> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _6> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _6> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _7> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_7, _7> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _7> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _7> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _7> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _7> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _7> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _7> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _7> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _7> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _7> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _7> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _7> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _7> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _7> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _7> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _8> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_7, _8> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _8> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _8> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _8> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _8> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _8> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _8> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _8> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _8> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _8> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _8> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _8> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _8> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _8> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _8> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _9> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_7, _9> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _9> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _9> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _9> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _9> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _9> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _9> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _9> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _9> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _9> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _9> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _9> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _9> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _9> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _9> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _A> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_7, _A> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _A> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _A> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _A> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _A> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _A> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _A> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _A> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _A> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _A> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _A> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _A> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _A> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _A> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _A> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _B> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_7, _B> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _B> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _B> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _B> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _B> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _B> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _B> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _B> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _B> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _B> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _B> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _B> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _B> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _B> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _B> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_7, _C> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_7, _C> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _C> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _C> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _C> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _C> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _C> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _C> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _C> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _C> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _C> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _C> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _C> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _C> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _C> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_7, _C> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_7, _D> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_7, _D> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _D> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _D> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _D> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _D> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _D> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _D> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _D> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _D> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _D> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _D> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _D> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _D> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_7, _D> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_7, _D> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_7, _E> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_7, _E> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _E> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _E> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _E> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _E> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _E> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _E> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _E> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _E> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _E> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _E> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _E> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_7, _E> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_7, _E> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_7, _E> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_7, _F> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_7, _F> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_7, _F> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_7, _F> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_7, _F> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_7, _F> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_7, _F> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_7, _F> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_7, _F> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_7, _F> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_7, _F> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_7, _F> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_7, _F> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_7, _F> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_7, _F> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_7, _F> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_8, _0> for _0 { type Output = _8; type Carry = _0; }
impl _HexAdd2<_8, _0> for _1 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_8, _0> for _2 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_8, _0> for _3 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_8, _0> for _4 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_8, _0> for _5 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _0> for _6 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _0> for _7 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _0> for _8 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _0> for _9 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _0> for _A { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _0> for _B { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _0> for _C { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _0> for _D { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _0> for _E { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _0> for _F { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _1> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_8, _1> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_8, _1> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_8, _1> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_8, _1> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _1> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _1> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _1> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _1> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _1> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _1> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _1> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _1> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _1> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _1> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _1> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _2> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_8, _2> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_8, _2> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_8, _2> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _2> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _2> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _2> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _2> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _2> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _2> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _2> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _2> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _2> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _2> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _2> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _2> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _3> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_8, _3> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_8, _3> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _3> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _3> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _3> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _3> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _3> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _3> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _3> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _3> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _3> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _3> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _3> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _3> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _3> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _4> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_8, _4> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _4> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _4> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _4> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _4> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _4> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _4> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _4> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _4> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _4> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _4> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _4> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _4> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _4> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _4> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _5> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_8, _5> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _5> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _5> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _5> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _5> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _5> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _5> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _5> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _5> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _5> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _5> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _5> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _5> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _5> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _5> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _6> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_8, _6> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _6> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _6> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _6> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _6> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _6> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _6> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _6> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _6> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _6> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _6> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _6> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _6> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _6> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _6> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _7> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_8, _7> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _7> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _7> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _7> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _7> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _7> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _7> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _7> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _7> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _7> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _7> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _7> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _7> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _7> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _7> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _8> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_8, _8> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _8> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _8> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _8> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _8> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _8> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _8> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _8> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _8> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _8> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _8> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _8> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _8> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _8> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _8> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _9> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_8, _9> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _9> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _9> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _9> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _9> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _9> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _9> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _9> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _9> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _9> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _9> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _9> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _9> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _9> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _9> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _A> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_8, _A> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _A> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _A> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _A> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _A> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _A> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _A> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _A> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _A> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _A> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _A> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _A> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _A> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _A> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _A> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _B> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_8, _B> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _B> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _B> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _B> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _B> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _B> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _B> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _B> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _B> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _B> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _B> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _B> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _B> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _B> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _B> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_8, _C> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_8, _C> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _C> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _C> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _C> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _C> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _C> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _C> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _C> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _C> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _C> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _C> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _C> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _C> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _C> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_8, _C> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_8, _D> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_8, _D> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _D> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _D> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _D> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _D> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _D> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _D> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _D> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _D> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _D> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _D> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _D> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _D> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_8, _D> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_8, _D> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_8, _E> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_8, _E> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _E> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _E> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _E> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _E> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _E> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _E> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _E> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _E> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _E> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _E> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _E> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_8, _E> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_8, _E> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_8, _E> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_8, _F> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_8, _F> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_8, _F> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_8, _F> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_8, _F> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_8, _F> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_8, _F> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_8, _F> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_8, _F> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_8, _F> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_8, _F> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_8, _F> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_8, _F> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_8, _F> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_8, _F> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_8, _F> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_9, _0> for _0 { type Output = _9; type Carry = _0; }
impl _HexAdd2<_9, _0> for _1 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_9, _0> for _2 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_9, _0> for _3 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_9, _0> for _4 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_9, _0> for _5 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _0> for _6 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _0> for _7 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _0> for _8 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _0> for _9 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _0> for _A { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _0> for _B { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _0> for _C { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _0> for _D { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _0> for _E { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _0> for _F { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _1> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_9, _1> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_9, _1> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_9, _1> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_9, _1> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _1> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _1> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _1> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _1> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _1> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _1> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _1> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _1> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _1> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _1> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _1> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _2> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_9, _2> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_9, _2> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_9, _2> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _2> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _2> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _2> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _2> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _2> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _2> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _2> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _2> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _2> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _2> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _2> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _2> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _3> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_9, _3> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_9, _3> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _3> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _3> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _3> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _3> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _3> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _3> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _3> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _3> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _3> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _3> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _3> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _3> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _3> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _4> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_9, _4> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _4> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _4> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _4> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _4> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _4> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _4> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _4> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _4> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _4> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _4> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _4> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _4> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _4> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _4> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _5> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_9, _5> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _5> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _5> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _5> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _5> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _5> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _5> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _5> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _5> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _5> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _5> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _5> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _5> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _5> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _5> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _6> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_9, _6> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _6> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _6> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _6> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _6> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _6> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _6> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _6> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _6> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _6> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _6> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _6> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _6> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _6> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _6> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _7> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_9, _7> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _7> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _7> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _7> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _7> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _7> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _7> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _7> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _7> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _7> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _7> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _7> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _7> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _7> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _7> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _8> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_9, _8> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _8> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _8> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _8> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _8> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _8> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _8> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _8> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _8> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _8> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _8> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _8> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _8> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _8> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _8> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _9> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_9, _9> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _9> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _9> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _9> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _9> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _9> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _9> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _9> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _9> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _9> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _9> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _9> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _9> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _9> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _9> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _A> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_9, _A> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _A> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _A> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _A> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _A> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _A> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _A> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _A> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _A> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _A> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _A> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _A> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _A> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _A> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _A> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _B> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_9, _B> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _B> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _B> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _B> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _B> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _B> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _B> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _B> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _B> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _B> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _B> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _B> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _B> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _B> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _B> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_9, _C> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_9, _C> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _C> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _C> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _C> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _C> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _C> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _C> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _C> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _C> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _C> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _C> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _C> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _C> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _C> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_9, _C> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_9, _D> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_9, _D> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _D> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _D> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _D> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _D> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _D> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _D> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _D> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _D> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _D> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _D> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _D> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _D> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_9, _D> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_9, _D> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_9, _E> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_9, _E> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _E> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _E> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _E> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _E> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _E> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _E> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _E> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _E> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _E> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _E> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _E> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_9, _E> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_9, _E> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_9, _E> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_9, _F> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_9, _F> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_9, _F> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_9, _F> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_9, _F> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_9, _F> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_9, _F> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_9, _F> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_9, _F> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_9, _F> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_9, _F> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_9, _F> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_9, _F> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_9, _F> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_9, _F> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_9, _F> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_A, _0> for _0 { type Output = _A; type Carry = _0; }
impl _HexAdd2<_A, _0> for _1 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_A, _0> for _2 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_A, _0> for _3 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_A, _0> for _4 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_A, _0> for _5 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _0> for _6 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _0> for _7 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _0> for _8 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _0> for _9 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _0> for _A { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _0> for _B { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _0> for _C { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _0> for _D { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _0> for _E { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _0> for _F { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _1> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_A, _1> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_A, _1> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_A, _1> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_A, _1> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _1> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _1> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _1> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _1> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _1> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _1> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _1> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _1> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _1> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _1> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _1> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _2> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_A, _2> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_A, _2> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_A, _2> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _2> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _2> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _2> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _2> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _2> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _2> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _2> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _2> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _2> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _2> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _2> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _2> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _3> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_A, _3> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_A, _3> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _3> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _3> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _3> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _3> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _3> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _3> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _3> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _3> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _3> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _3> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _3> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _3> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _3> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _4> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_A, _4> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _4> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _4> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _4> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _4> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _4> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _4> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _4> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _4> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _4> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _4> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _4> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _4> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _4> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _4> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _5> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_A, _5> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _5> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _5> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _5> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _5> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _5> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _5> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _5> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _5> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _5> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _5> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _5> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _5> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _5> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _5> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _6> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_A, _6> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _6> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _6> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _6> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _6> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _6> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _6> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _6> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _6> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _6> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _6> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _6> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _6> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _6> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _6> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _7> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_A, _7> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _7> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _7> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _7> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _7> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _7> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _7> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _7> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _7> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _7> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _7> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _7> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _7> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _7> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _7> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _8> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_A, _8> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _8> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _8> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _8> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _8> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _8> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _8> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _8> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _8> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _8> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _8> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _8> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _8> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _8> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _8> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _9> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_A, _9> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _9> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _9> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _9> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _9> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _9> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _9> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _9> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _9> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _9> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _9> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _9> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _9> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _9> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _9> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _A> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_A, _A> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _A> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _A> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _A> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _A> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _A> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _A> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _A> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _A> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _A> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _A> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _A> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _A> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _A> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _A> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _B> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_A, _B> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _B> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _B> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _B> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _B> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _B> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _B> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _B> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _B> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _B> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _B> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _B> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _B> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _B> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _B> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_A, _C> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_A, _C> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _C> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _C> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _C> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _C> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _C> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _C> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _C> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _C> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _C> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _C> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _C> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _C> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _C> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_A, _C> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_A, _D> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_A, _D> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _D> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _D> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _D> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _D> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _D> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _D> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _D> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _D> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _D> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _D> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _D> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _D> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_A, _D> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_A, _D> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_A, _E> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_A, _E> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _E> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _E> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _E> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _E> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _E> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _E> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _E> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _E> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _E> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _E> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _E> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_A, _E> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_A, _E> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_A, _E> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_A, _F> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_A, _F> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_A, _F> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_A, _F> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_A, _F> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_A, _F> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_A, _F> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_A, _F> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_A, _F> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_A, _F> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_A, _F> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_A, _F> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_A, _F> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_A, _F> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_A, _F> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_A, _F> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_B, _0> for _0 { type Output = _B; type Carry = _0; }
impl _HexAdd2<_B, _0> for _1 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_B, _0> for _2 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_B, _0> for _3 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_B, _0> for _4 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_B, _0> for _5 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _0> for _6 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _0> for _7 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _0> for _8 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _0> for _9 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _0> for _A { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _0> for _B { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _0> for _C { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _0> for _D { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _0> for _E { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _0> for _F { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _1> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_B, _1> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_B, _1> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_B, _1> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_B, _1> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _1> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _1> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _1> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _1> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _1> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _1> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _1> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _1> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _1> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _1> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _1> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _2> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_B, _2> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_B, _2> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_B, _2> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _2> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _2> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _2> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _2> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _2> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _2> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _2> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _2> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _2> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _2> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _2> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _2> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _3> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_B, _3> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_B, _3> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _3> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _3> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _3> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _3> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _3> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _3> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _3> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _3> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _3> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _3> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _3> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _3> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _3> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _4> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_B, _4> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _4> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _4> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _4> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _4> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _4> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _4> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _4> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _4> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _4> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _4> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _4> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _4> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _4> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _4> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _5> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_B, _5> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _5> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _5> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _5> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _5> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _5> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _5> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _5> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _5> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _5> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _5> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _5> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _5> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _5> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _5> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _6> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_B, _6> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _6> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _6> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _6> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _6> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _6> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _6> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _6> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _6> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _6> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _6> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _6> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _6> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _6> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _6> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _7> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_B, _7> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _7> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _7> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _7> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _7> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _7> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _7> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _7> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _7> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _7> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _7> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _7> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _7> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _7> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _7> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _8> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_B, _8> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _8> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _8> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _8> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _8> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _8> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _8> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _8> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _8> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _8> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _8> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _8> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _8> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _8> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _8> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _9> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_B, _9> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _9> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _9> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _9> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _9> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _9> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _9> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _9> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _9> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _9> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _9> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _9> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _9> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _9> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _9> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _A> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_B, _A> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _A> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _A> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _A> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _A> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _A> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _A> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _A> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _A> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _A> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _A> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _A> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _A> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _A> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _A> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _B> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_B, _B> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _B> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _B> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _B> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _B> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _B> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _B> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _B> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _B> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _B> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _B> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _B> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _B> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _B> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _B> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_B, _C> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_B, _C> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _C> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _C> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _C> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _C> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _C> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _C> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _C> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _C> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _C> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _C> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _C> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _C> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _C> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_B, _C> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_B, _D> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_B, _D> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _D> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _D> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _D> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _D> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _D> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _D> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _D> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _D> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _D> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _D> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _D> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _D> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_B, _D> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_B, _D> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_B, _E> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_B, _E> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _E> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _E> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _E> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _E> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _E> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _E> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _E> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _E> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _E> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _E> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _E> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_B, _E> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_B, _E> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_B, _E> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_B, _F> for _0 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_B, _F> for _1 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_B, _F> for _2 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_B, _F> for _3 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_B, _F> for _4 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_B, _F> for _5 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_B, _F> for _6 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_B, _F> for _7 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_B, _F> for _8 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_B, _F> for _9 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_B, _F> for _A { type Output = _4; type Carry = _2; }
impl _HexAdd2<_B, _F> for _B { type Output = _5; type Carry = _2; }
impl _HexAdd2<_B, _F> for _C { type Output = _6; type Carry = _2; }
impl _HexAdd2<_B, _F> for _D { type Output = _7; type Carry = _2; }
impl _HexAdd2<_B, _F> for _E { type Output = _8; type Carry = _2; }
impl _HexAdd2<_B, _F> for _F { type Output = _9; type Carry = _2; }
impl _HexAdd2<_C, _0> for _0 { type Output = _C; type Carry = _0; }
impl _HexAdd2<_C, _0> for _1 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_C, _0> for _2 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_C, _0> for _3 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_C, _0> for _4 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_C, _0> for _5 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _0> for _6 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _0> for _7 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _0> for _8 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _0> for _9 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _0> for _A { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _0> for _B { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _0> for _C { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _0> for _D { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _0> for _E { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _0> for _F { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _1> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_C, _1> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_C, _1> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_C, _1> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_C, _1> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _1> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _1> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _1> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _1> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _1> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _1> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _1> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _1> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _1> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _1> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _1> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _2> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_C, _2> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_C, _2> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_C, _2> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _2> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _2> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _2> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _2> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _2> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _2> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _2> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _2> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _2> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _2> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _2> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _2> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _3> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_C, _3> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_C, _3> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _3> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _3> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _3> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _3> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _3> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _3> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _3> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _3> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _3> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _3> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _3> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _3> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _3> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _4> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_C, _4> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _4> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _4> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _4> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _4> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _4> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _4> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _4> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _4> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _4> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _4> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _4> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _4> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _4> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _4> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _5> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_C, _5> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _5> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _5> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _5> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _5> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _5> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _5> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _5> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _5> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _5> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _5> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _5> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _5> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _5> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _5> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _6> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_C, _6> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _6> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _6> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _6> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _6> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _6> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _6> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _6> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _6> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _6> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _6> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _6> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _6> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _6> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _6> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _7> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_C, _7> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _7> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _7> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _7> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _7> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _7> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _7> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _7> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _7> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _7> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _7> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _7> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _7> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _7> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _7> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _8> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_C, _8> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _8> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _8> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _8> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _8> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _8> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _8> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _8> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _8> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _8> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _8> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _8> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _8> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _8> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _8> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _9> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_C, _9> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _9> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _9> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _9> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _9> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _9> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _9> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _9> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _9> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _9> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _9> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _9> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _9> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _9> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _9> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _A> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_C, _A> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _A> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _A> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _A> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _A> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _A> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _A> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _A> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _A> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _A> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _A> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _A> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _A> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _A> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _A> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _B> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_C, _B> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _B> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _B> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _B> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _B> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _B> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _B> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _B> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _B> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _B> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _B> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _B> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _B> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _B> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _B> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_C, _C> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_C, _C> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _C> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _C> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _C> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _C> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _C> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _C> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _C> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _C> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _C> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _C> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _C> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _C> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _C> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_C, _C> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_C, _D> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_C, _D> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _D> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _D> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _D> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _D> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _D> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _D> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _D> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _D> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _D> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _D> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _D> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _D> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_C, _D> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_C, _D> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_C, _E> for _0 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_C, _E> for _1 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _E> for _2 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _E> for _3 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _E> for _4 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _E> for _5 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _E> for _6 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _E> for _7 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _E> for _8 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _E> for _9 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _E> for _A { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _E> for _B { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _E> for _C { type Output = _6; type Carry = _2; }
impl _HexAdd2<_C, _E> for _D { type Output = _7; type Carry = _2; }
impl _HexAdd2<_C, _E> for _E { type Output = _8; type Carry = _2; }
impl _HexAdd2<_C, _E> for _F { type Output = _9; type Carry = _2; }
impl _HexAdd2<_C, _F> for _0 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_C, _F> for _1 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_C, _F> for _2 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_C, _F> for _3 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_C, _F> for _4 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_C, _F> for _5 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_C, _F> for _6 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_C, _F> for _7 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_C, _F> for _8 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_C, _F> for _9 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_C, _F> for _A { type Output = _5; type Carry = _2; }
impl _HexAdd2<_C, _F> for _B { type Output = _6; type Carry = _2; }
impl _HexAdd2<_C, _F> for _C { type Output = _7; type Carry = _2; }
impl _HexAdd2<_C, _F> for _D { type Output = _8; type Carry = _2; }
impl _HexAdd2<_C, _F> for _E { type Output = _9; type Carry = _2; }
impl _HexAdd2<_C, _F> for _F { type Output = _A; type Carry = _2; }
impl _HexAdd2<_D, _0> for _0 { type Output = _D; type Carry = _0; }
impl _HexAdd2<_D, _0> for _1 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_D, _0> for _2 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_D, _0> for _3 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_D, _0> for _4 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_D, _0> for _5 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _0> for _6 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _0> for _7 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _0> for _8 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _0> for _9 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _0> for _A { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _0> for _B { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _0> for _C { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _0> for _D { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _0> for _E { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _0> for _F { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _1> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_D, _1> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_D, _1> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_D, _1> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_D, _1> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _1> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _1> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _1> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _1> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _1> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _1> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _1> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _1> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _1> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _1> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _1> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _2> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_D, _2> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_D, _2> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_D, _2> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _2> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _2> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _2> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _2> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _2> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _2> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _2> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _2> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _2> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _2> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _2> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _2> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _3> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_D, _3> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_D, _3> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _3> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _3> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _3> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _3> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _3> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _3> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _3> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _3> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _3> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _3> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _3> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _3> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _3> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _4> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_D, _4> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _4> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _4> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _4> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _4> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _4> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _4> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _4> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _4> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _4> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _4> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _4> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _4> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _4> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _4> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _5> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_D, _5> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _5> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _5> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _5> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _5> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _5> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _5> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _5> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _5> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _5> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _5> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _5> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _5> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _5> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _5> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _6> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_D, _6> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _6> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _6> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _6> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _6> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _6> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _6> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _6> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _6> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _6> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _6> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _6> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _6> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _6> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _6> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _7> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_D, _7> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _7> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _7> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _7> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _7> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _7> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _7> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _7> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _7> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _7> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _7> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _7> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _7> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _7> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _7> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _8> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_D, _8> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _8> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _8> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _8> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _8> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _8> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _8> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _8> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _8> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _8> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _8> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _8> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _8> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _8> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _8> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _9> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_D, _9> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _9> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _9> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _9> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _9> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _9> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _9> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _9> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _9> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _9> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _9> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _9> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _9> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _9> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _9> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _A> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_D, _A> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _A> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _A> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _A> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _A> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _A> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _A> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _A> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _A> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _A> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _A> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _A> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _A> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _A> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _A> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _B> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_D, _B> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _B> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _B> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _B> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _B> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _B> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _B> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _B> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _B> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _B> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _B> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _B> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _B> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _B> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _B> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_D, _C> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_D, _C> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _C> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _C> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _C> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _C> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _C> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _C> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _C> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _C> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _C> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _C> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _C> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _C> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _C> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_D, _C> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_D, _D> for _0 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_D, _D> for _1 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _D> for _2 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _D> for _3 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _D> for _4 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _D> for _5 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _D> for _6 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _D> for _7 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _D> for _8 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _D> for _9 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _D> for _A { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _D> for _B { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _D> for _C { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _D> for _D { type Output = _7; type Carry = _2; }
impl _HexAdd2<_D, _D> for _E { type Output = _8; type Carry = _2; }
impl _HexAdd2<_D, _D> for _F { type Output = _9; type Carry = _2; }
impl _HexAdd2<_D, _E> for _0 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_D, _E> for _1 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _E> for _2 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _E> for _3 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _E> for _4 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _E> for _5 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _E> for _6 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _E> for _7 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _E> for _8 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _E> for _9 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _E> for _A { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _E> for _B { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _E> for _C { type Output = _7; type Carry = _2; }
impl _HexAdd2<_D, _E> for _D { type Output = _8; type Carry = _2; }
impl _HexAdd2<_D, _E> for _E { type Output = _9; type Carry = _2; }
impl _HexAdd2<_D, _E> for _F { type Output = _A; type Carry = _2; }
impl _HexAdd2<_D, _F> for _0 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_D, _F> for _1 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_D, _F> for _2 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_D, _F> for _3 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_D, _F> for _4 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_D, _F> for _5 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_D, _F> for _6 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_D, _F> for _7 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_D, _F> for _8 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_D, _F> for _9 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_D, _F> for _A { type Output = _6; type Carry = _2; }
impl _HexAdd2<_D, _F> for _B { type Output = _7; type Carry = _2; }
impl _HexAdd2<_D, _F> for _C { type Output = _8; type Carry = _2; }
impl _HexAdd2<_D, _F> for _D { type Output = _9; type Carry = _2; }
impl _HexAdd2<_D, _F> for _E { type Output = _A; type Carry = _2; }
impl _HexAdd2<_D, _F> for _F { type Output = _B; type Carry = _2; }
impl _HexAdd2<_E, _0> for _0 { type Output = _E; type Carry = _0; }
impl _HexAdd2<_E, _0> for _1 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_E, _0> for _2 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_E, _0> for _3 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_E, _0> for _4 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_E, _0> for _5 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _0> for _6 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _0> for _7 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _0> for _8 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _0> for _9 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _0> for _A { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _0> for _B { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _0> for _C { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _0> for _D { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _0> for _E { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _0> for _F { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _1> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_E, _1> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_E, _1> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_E, _1> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_E, _1> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _1> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _1> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _1> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _1> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _1> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _1> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _1> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _1> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _1> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _1> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _1> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _2> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_E, _2> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_E, _2> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_E, _2> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _2> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _2> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _2> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _2> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _2> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _2> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _2> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _2> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _2> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _2> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _2> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _2> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _3> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_E, _3> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_E, _3> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _3> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _3> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _3> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _3> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _3> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _3> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _3> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _3> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _3> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _3> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _3> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _3> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _3> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _4> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_E, _4> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _4> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _4> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _4> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _4> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _4> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _4> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _4> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _4> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _4> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _4> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _4> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _4> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _4> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _4> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _5> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_E, _5> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _5> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _5> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _5> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _5> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _5> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _5> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _5> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _5> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _5> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _5> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _5> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _5> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _5> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _5> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _6> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_E, _6> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _6> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _6> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _6> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _6> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _6> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _6> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _6> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _6> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _6> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _6> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _6> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _6> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _6> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _6> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _7> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_E, _7> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _7> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _7> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _7> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _7> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _7> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _7> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _7> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _7> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _7> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _7> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _7> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _7> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _7> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _7> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _8> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_E, _8> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _8> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _8> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _8> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _8> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _8> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _8> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _8> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _8> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _8> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _8> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _8> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _8> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _8> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _8> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _9> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_E, _9> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _9> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _9> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _9> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _9> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _9> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _9> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _9> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _9> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _9> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _9> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _9> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _9> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _9> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _9> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _A> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_E, _A> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _A> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _A> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _A> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _A> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _A> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _A> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _A> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _A> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _A> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _A> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _A> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _A> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _A> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _A> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _B> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_E, _B> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _B> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _B> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _B> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _B> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _B> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _B> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _B> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _B> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _B> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _B> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _B> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _B> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _B> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _B> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_E, _C> for _0 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_E, _C> for _1 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _C> for _2 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _C> for _3 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _C> for _4 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _C> for _5 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _C> for _6 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _C> for _7 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _C> for _8 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _C> for _9 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _C> for _A { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _C> for _B { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _C> for _C { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _C> for _D { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _C> for _E { type Output = _8; type Carry = _2; }
impl _HexAdd2<_E, _C> for _F { type Output = _9; type Carry = _2; }
impl _HexAdd2<_E, _D> for _0 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_E, _D> for _1 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _D> for _2 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _D> for _3 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _D> for _4 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _D> for _5 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _D> for _6 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _D> for _7 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _D> for _8 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _D> for _9 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _D> for _A { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _D> for _B { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _D> for _C { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _D> for _D { type Output = _8; type Carry = _2; }
impl _HexAdd2<_E, _D> for _E { type Output = _9; type Carry = _2; }
impl _HexAdd2<_E, _D> for _F { type Output = _A; type Carry = _2; }
impl _HexAdd2<_E, _E> for _0 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_E, _E> for _1 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _E> for _2 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _E> for _3 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _E> for _4 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _E> for _5 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _E> for _6 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _E> for _7 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _E> for _8 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _E> for _9 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _E> for _A { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _E> for _B { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _E> for _C { type Output = _8; type Carry = _2; }
impl _HexAdd2<_E, _E> for _D { type Output = _9; type Carry = _2; }
impl _HexAdd2<_E, _E> for _E { type Output = _A; type Carry = _2; }
impl _HexAdd2<_E, _E> for _F { type Output = _B; type Carry = _2; }
impl _HexAdd2<_E, _F> for _0 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_E, _F> for _1 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_E, _F> for _2 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_E, _F> for _3 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_E, _F> for _4 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_E, _F> for _5 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_E, _F> for _6 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_E, _F> for _7 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_E, _F> for _8 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_E, _F> for _9 { type Output = _6; type Carry = _2; }
impl _HexAdd2<_E, _F> for _A { type Output = _7; type Carry = _2; }
impl _HexAdd2<_E, _F> for _B { type Output = _8; type Carry = _2; }
impl _HexAdd2<_E, _F> for _C { type Output = _9; type Carry = _2; }
impl _HexAdd2<_E, _F> for _D { type Output = _A; type Carry = _2; }
impl _HexAdd2<_E, _F> for _E { type Output = _B; type Carry = _2; }
impl _HexAdd2<_E, _F> for _F { type Output = _C; type Carry = _2; }
impl _HexAdd2<_F, _0> for _0 { type Output = _F; type Carry = _0; }
impl _HexAdd2<_F, _0> for _1 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_F, _0> for _2 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_F, _0> for _3 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_F, _0> for _4 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_F, _0> for _5 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _0> for _6 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _0> for _7 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _0> for _8 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _0> for _9 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _0> for _A { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _0> for _B { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _0> for _C { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _0> for _D { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _0> for _E { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _0> for _F { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _1> for _0 { type Output = _0; type Carry = _1; }
impl _HexAdd2<_F, _1> for _1 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_F, _1> for _2 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_F, _1> for _3 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_F, _1> for _4 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _1> for _5 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _1> for _6 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _1> for _7 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _1> for _8 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _1> for _9 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _1> for _A { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _1> for _B { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _1> for _C { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _1> for _D { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _1> for _E { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _1> for _F { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _2> for _0 { type Output = _1; type Carry = _1; }
impl _HexAdd2<_F, _2> for _1 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_F, _2> for _2 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_F, _2> for _3 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _2> for _4 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _2> for _5 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _2> for _6 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _2> for _7 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _2> for _8 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _2> for _9 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _2> for _A { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _2> for _B { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _2> for _C { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _2> for _D { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _2> for _E { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _2> for _F { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _3> for _0 { type Output = _2; type Carry = _1; }
impl _HexAdd2<_F, _3> for _1 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_F, _3> for _2 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _3> for _3 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _3> for _4 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _3> for _5 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _3> for _6 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _3> for _7 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _3> for _8 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _3> for _9 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _3> for _A { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _3> for _B { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _3> for _C { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _3> for _D { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _3> for _E { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _3> for _F { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _4> for _0 { type Output = _3; type Carry = _1; }
impl _HexAdd2<_F, _4> for _1 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _4> for _2 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _4> for _3 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _4> for _4 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _4> for _5 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _4> for _6 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _4> for _7 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _4> for _8 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _4> for _9 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _4> for _A { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _4> for _B { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _4> for _C { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _4> for _D { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _4> for _E { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _4> for _F { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _5> for _0 { type Output = _4; type Carry = _1; }
impl _HexAdd2<_F, _5> for _1 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _5> for _2 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _5> for _3 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _5> for _4 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _5> for _5 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _5> for _6 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _5> for _7 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _5> for _8 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _5> for _9 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _5> for _A { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _5> for _B { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _5> for _C { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _5> for _D { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _5> for _E { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _5> for _F { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _6> for _0 { type Output = _5; type Carry = _1; }
impl _HexAdd2<_F, _6> for _1 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _6> for _2 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _6> for _3 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _6> for _4 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _6> for _5 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _6> for _6 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _6> for _7 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _6> for _8 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _6> for _9 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _6> for _A { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _6> for _B { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _6> for _C { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _6> for _D { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _6> for _E { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _6> for _F { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _7> for _0 { type Output = _6; type Carry = _1; }
impl _HexAdd2<_F, _7> for _1 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _7> for _2 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _7> for _3 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _7> for _4 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _7> for _5 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _7> for _6 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _7> for _7 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _7> for _8 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _7> for _9 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _7> for _A { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _7> for _B { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _7> for _C { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _7> for _D { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _7> for _E { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _7> for _F { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _8> for _0 { type Output = _7; type Carry = _1; }
impl _HexAdd2<_F, _8> for _1 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _8> for _2 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _8> for _3 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _8> for _4 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _8> for _5 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _8> for _6 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _8> for _7 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _8> for _8 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _8> for _9 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _8> for _A { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _8> for _B { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _8> for _C { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _8> for _D { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _8> for _E { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _8> for _F { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _9> for _0 { type Output = _8; type Carry = _1; }
impl _HexAdd2<_F, _9> for _1 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _9> for _2 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _9> for _3 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _9> for _4 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _9> for _5 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _9> for _6 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _9> for _7 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _9> for _8 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _9> for _9 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _9> for _A { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _9> for _B { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _9> for _C { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _9> for _D { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _9> for _E { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _9> for _F { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _A> for _0 { type Output = _9; type Carry = _1; }
impl _HexAdd2<_F, _A> for _1 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _A> for _2 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _A> for _3 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _A> for _4 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _A> for _5 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _A> for _6 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _A> for _7 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _A> for _8 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _A> for _9 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _A> for _A { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _A> for _B { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _A> for _C { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _A> for _D { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _A> for _E { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _A> for _F { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _B> for _0 { type Output = _A; type Carry = _1; }
impl _HexAdd2<_F, _B> for _1 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _B> for _2 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _B> for _3 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _B> for _4 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _B> for _5 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _B> for _6 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _B> for _7 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _B> for _8 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _B> for _9 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _B> for _A { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _B> for _B { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _B> for _C { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _B> for _D { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _B> for _E { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _B> for _F { type Output = _9; type Carry = _2; }
impl _HexAdd2<_F, _C> for _0 { type Output = _B; type Carry = _1; }
impl _HexAdd2<_F, _C> for _1 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _C> for _2 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _C> for _3 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _C> for _4 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _C> for _5 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _C> for _6 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _C> for _7 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _C> for _8 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _C> for _9 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _C> for _A { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _C> for _B { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _C> for _C { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _C> for _D { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _C> for _E { type Output = _9; type Carry = _2; }
impl _HexAdd2<_F, _C> for _F { type Output = _A; type Carry = _2; }
impl _HexAdd2<_F, _D> for _0 { type Output = _C; type Carry = _1; }
impl _HexAdd2<_F, _D> for _1 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _D> for _2 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _D> for _3 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _D> for _4 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _D> for _5 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _D> for _6 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _D> for _7 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _D> for _8 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _D> for _9 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _D> for _A { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _D> for _B { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _D> for _C { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _D> for _D { type Output = _9; type Carry = _2; }
impl _HexAdd2<_F, _D> for _E { type Output = _A; type Carry = _2; }
impl _HexAdd2<_F, _D> for _F { type Output = _B; type Carry = _2; }
impl _HexAdd2<_F, _E> for _0 { type Output = _D; type Carry = _1; }
impl _HexAdd2<_F, _E> for _1 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _E> for _2 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _E> for _3 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _E> for _4 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _E> for _5 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _E> for _6 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _E> for _7 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _E> for _8 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _E> for _9 { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _E> for _A { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _E> for _B { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _E> for _C { type Output = _9; type Carry = _2; }
impl _HexAdd2<_F, _E> for _D { type Output = _A; type Carry = _2; }
impl _HexAdd2<_F, _E> for _E { type Output = _B; type Carry = _2; }
impl _HexAdd2<_F, _E> for _F { type Output = _C; type Carry = _2; }
impl _HexAdd2<_F, _F> for _0 { type Output = _E; type Carry = _1; }
impl _HexAdd2<_F, _F> for _1 { type Output = _F; type Carry = _1; }
impl _HexAdd2<_F, _F> for _2 { type Output = _0; type Carry = _2; }
impl _HexAdd2<_F, _F> for _3 { type Output = _1; type Carry = _2; }
impl _HexAdd2<_F, _F> for _4 { type Output = _2; type Carry = _2; }
impl _HexAdd2<_F, _F> for _5 { type Output = _3; type Carry = _2; }
impl _HexAdd2<_F, _F> for _6 { type Output = _4; type Carry = _2; }
impl _HexAdd2<_F, _F> for _7 { type Output = _5; type Carry = _2; }
impl _HexAdd2<_F, _F> for _8 { type Output = _6; type Carry = _2; }
impl _HexAdd2<_F, _F> for _9 { type Output = _7; type Carry = _2; }
impl _HexAdd2<_F, _F> for _A { type Output = _8; type Carry = _2; }
impl _HexAdd2<_F, _F> for _B { type Output = _9; type Carry = _2; }
impl _HexAdd2<_F, _F> for _C { type Output = _A; type Carry = _2; }
impl _HexAdd2<_F, _F> for _D { type Output = _B; type Carry = _2; }
impl _HexAdd2<_F, _F> for _E { type Output = _C; type Carry = _2; }
impl _HexAdd2<_F, _F> for _F { type Output = _D; type Carry = _2; }
